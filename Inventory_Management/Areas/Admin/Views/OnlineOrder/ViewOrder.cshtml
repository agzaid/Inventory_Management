@model Domain.Models.InvoiceVM

<div class="page-wrapper">
    <div class="page-content">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body p-4">
                        <form asp-action="Create" asp-controller="Invoice" id="myForm" enctype="multipart/form-data">
                            <div class="d-flex justify-content-between">
                                <h5 class="card-title">Create Invoice</h5>
                                @if (ViewBag.orderNum != null)
                                {
                                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal">
                                        Peak Oreders
                                    </button>
                                    <input asp-for="InvoiceNumber" class="form-control" value="@ViewBag.orderNum" hidden>

                                }
                            </div>
                            <hr />
                            <div class="card-body">
                                <div class="fm-search">
                                    <div class="mb-0">
                                        <div class="input-group input-group-lg">
                                            <span class="input-group-text bg-transparent" id="porductSearch" style="cursor:pointer"><i class='bx bx-search'></i></span>
                                            <input id="inputSearch" type="text" class="form-control" placeholder="Search the files">
                                        </div>
                                    </div>
                                </div>
                                <div class="table-responsive text-center mt-3">
                                    <table class="table table-striped table-hover table-sm mb-0" id="listOfPurchases">
                                        <thead>
                                            <tr>
                                                <th>ID</th>
                                                <th colspan="2">Product Name</th>
                                                <th>Price</th>
                                                <th>Discount</th>
                                                <th>Quantity</th>
                                                <th>Available In Stock</th>
                                                <th class="individualDiscount">Individual Disc</th>
                                                <th></th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="10" class="no-data-row text-center">
                                                    No products yet...!!!
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="row mt-3">
                                    <div class="container col-8">
                                        <div class="mb-3">
                                            <label class="form-label fw-semibold">Phone Number</label>
                                            <div class="input-group input-group-md">
                                                <span class="input-group-text bg-transparent" id="phoneSearch" style="cursor:pointer"><i class='bx bx-search'></i></span>
                                                <input class="form-control" asp-for="PhoneNumber">
                                            </div>
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>

                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label fw-semibold">Customer Name</label>
                                            <input class="form-control" asp-for="CustomerName">
                                            <span asp-validation-for="CustomerName" class="text-danger"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label for="inputProductType" class="form-label fw-semibold">Delivery Regoin</label>
                                            <select class="form-select mb-2" aria-label="multiple select example"
                                                    asp-for="AreaId" asp-items="@(new SelectList(Model.ListOfAreas, "Value", "Text"))" data-placeholder=" Choose Area...">
                                                <option disabled>Please Select Area...</option>
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label fw-semibold">Shipping Notes</label>
                                            <textarea class="form-control" asp-for="ShippingNotes" placeholder="Detailed Address...">
                                            </textarea>
                                            <span asp-validation-for="ShippingNotes" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-lg-4 col-12">
                                        <div class="table-responsive">
                                            <table class="table table-striped table-hover table-sm mb-0">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="text-center">Total Amount :</td>
                                                        <td class="text-center d-flex flex-wrap justify-content-center">
                                                            <div id="totalAmount">--</div>
                                                            <input name="totalAmountInput" id="totalAmountInput" hidden />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">Order Tax :</td>
                                                        <td class="text-center d-flex flex-wrap justify-content-center">
                                                            <div id="orderTax">--</div>
                                                            <input name="orderTaxInput" id="orderTaxInput" hidden />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">Shipping :</td>
                                                        <td class="text-center d-flex flex-wrap justify-content-center">
                                                            <div id="shipping" data-value="55">55</div>
                                                            <input id="shippingInput" name="shippingInput" value="@Model.AreaId" hidden />
                                                            <input id="shippingText" name="shippingText" value="other" hidden />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">
                                                            <div class="form-check form-switch form-check-primary">
                                                                <input class="form-check-input" id="discountSwitch" name="discountSwitch" type="checkbox" />
                                                                Discount :
                                                            </div>
                                                        </td>
                                                        <td class="text-center d-flex flex-wrap justify-content-center">
                                                            <div id="discount">--</div>
                                                            <input class="form-control col-1" id="allDiscountInput" name="allDiscountInput" style="display:none" />
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">Grand Total :</td>
                                                        <td class="text-center d-flex flex-wrap justify-content-center">
                                                            <div id="grandTotal">--</div>
                                                            <input id="grandTotalInput" name="grandTotalInput" hidden />
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <button type="submit" id="submitBtn" class="btn btn-inverse-primary">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <h5 class="modal-title" id="myModalLabel">Order Number: <span class="bg-success> @ViewBag.orderNum </span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <div style="max-height: 300px; overflow-y: auto;">
                            <table class="table table-striped">
                                <thead class="table-dark" style="position: sticky; top: 0; background: white; z-index: 2;">
                                    <tr>
                                        <th>Product Name</th>
                                        <th>Quantity</th>
                                        <th>Shipping ID</th>
                                        <th>Shipping Price</th>
                                        <th>Price Sold To Customer</th>
                                        <th>Customer Name</th>
                                        <th>Phone</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.ListInvoiceItemVMs.Count > 0)
                                    {
                                        @foreach (var item in Model.ListInvoiceItemVMs)
                                        {
                                            <tr>
                                                <td>@item.ProductName</td>
                                                <td>@item.Quantity</td>
                                                <td>@Model.AreaId</td>
                                                <td>@item.ShippingPrice</td>
                                                <td>@item.PriceSoldToCustomer</td>
                                                <td>@item.CustomerName</td>
                                                <td>@item.MobileNumber</td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>


                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
         $(document).ready(function () {

             let userTyping = false;
             updateTotalPrice();
           $('#myForm').on('submit', function (event) {
               debugger;
               var phoneNum = $('#PhoneNumber').val();
               var customerName = $('#CustomerName').val();
               if(phoneNum === "" || customerName === "") {
                   event.preventDefault(); // Prevent form submission
                   _SWAL.AlertWithoutNotification("Please fill in all required fields.");
                   return;
               }else
               userTyping = true;

               if (!userTyping) {
                  event.preventDefault();
               }else
                 userTyping = false;
             });

           $('#inputSearch').on('input', function() {
             userTyping = true;
               });

           $('#ImagesFormFiles').imageuploadify();

            $('#porductSearch').on('click', function(event) {
                  SearchProduct();
           });
           $('#inputSearch').on('keydown', function(event) {
              if (event.key === 'Enter') {
                      event.preventDefault();
                      SearchProduct();
               }
           });
           $('#AreaId').on('change',function() {
                updateShippingPriceHtml($('#AreaId'));
                updateTotalPrice();
            });

           $('#phoneSearch').on('click',function(event) {
                 SearchCustomer();
           });
           $('#PhoneNumber').on('keydown',function(event) {
             debugger;
              if (event.key === 'Enter') {
                      event.preventDefault();
                      SearchCustomer();
               }
          });

           $('#discountSwitch').change(function() {
            if ($(this).prop('checked')) {
                $('.individualDiscount').hide();
                $('#discount').hide();
                $('#allDiscountInput').show();
            } else {
                $('#discount').show();
                $('#allDiscountInput').hide();
                $('.individualDiscount').show();
            }
              updateTotalPrice();
            });


           $('.individualDiscount-input').on('input',function() {
               
               updateTotalPrice();
           });
           $('#allDiscountInput').on('change',function() {
                updateTotalPrice();
           });

           updateShippingPriceHtml($('#AreaId'));

         });

         function SearchCustomer(){
              var query = $('#PhoneNumber').val();
                 // var $url = "@Url.Action("FilterPatientByDate", "Doctor")";
                 var $url = "@Url.Action("SearchCustomer", "Invoice")";
                 var parameter = {
                     data: query
                 };
                 _Ajax.GETWithParametersStringfy($url, parameter, "GET", function () { },
                     function (data) {
                         var res = data;
                         if (res != null && res.isSuccess==true) {
                            MappingToFields(res);
                         } else
                             _SWAL.AlertWithoutNotification(res.Message);
                     },
                     function (xhr) {
                         _SWAL.AlertWithoutNotification("Something went wrong..!!");
                     });
         };

        async function MappingToFields(res){
            
               var result = await _SWAL.CustomAlertWithOwnMessage("A Customer Was Found, Do you want to use that customer ???","Yes","No");
              if(result){
                   $('#CustomerName').val(res.data.customerName);
                   $('#ShippingNotes').val(res.data.address);
                   $('#PhoneNumber').val(res.data.phone);
                   var selectedValue = $('#AreaId option').filter(function() {
                             return $(this).text() === res.data.area;
                           }).val();
                   $('#AreaId').val(selectedValue).change();
              }
         }

         function updateTotalPrice() {
             
             var totalPrice = 0;
             var totalProductItems=0;
             var shipping = 0;
             var allDiscountInput = $('#allDiscountInput').val();

             $('.price-input').each(function() {
                 
                 var price = parseInt($(this).val());
                 var row = $(this).closest('tr');
                 var quantity = row.find('.quantity-input').val();
                 var discount = row.find('.individualDiscount-input').val();
                 var discountSwitch = $('#discountSwitch');

                 if(discountSwitch.checked || discountSwitch[0].checked){
                     discount = '';
                 }
                  let selectedText = $("#AreaId option:selected").text();
                    // e.g. "2 - al hadaba al wosta (mokattam) (15)"

                    // Use regex to get the number inside the last ()
                    let match = selectedText.match(_RegexFloat);
                    let val = "";
                    if (match) {
                        val = match[1]; // "15"
                        console.log(val);
                    }
                 shipping = parseFloat(val);
                // var productTotal = quantity * price + shipping;
                var productItemsTotal = 0;
                if  (discount!=""){
                    discount = parseFloat(discount);
                    price = price * quantity;
                    productItemsTotal= price - (price * discount / 100);
                }else{
                    productItemsTotal = quantity * price ;
                }
                 totalProductItems += productItemsTotal;

                 $('#totalAmount').text('$' + totalProductItems.toFixed(2));
                 $('#totalAmountInput').val(totalProductItems);
             });

             
             if(allDiscountInput != "" && (discountSwitch.checked || discountSwitch[0].checked)){
                    allDiscountInput = parseFloat(allDiscountInput);
                    totalProductItems = totalProductItems - (totalProductItems * allDiscountInput / 100);
              }
              totalPrice = totalProductItems + shipping;
             $('#grandTotal').text('$' + totalPrice.toFixed(2));
             $('#grandTotalInput').val(totalPrice);
         }

         function AddNewRow(data){
              var rowIndex = $('#listOfPurchases tbody tr').length;
             var newRowHtml = `
                 <tr id="row-${rowIndex}">
                 <td id="index-${rowIndex}">${rowIndex + 1}</td>
                 <td colspan="2">
                     <div class="d-flex align-items-center justify-content-center">
                         <div class="font-weight-bold text-danger">${data.ProductName}</div>
                         <input class="font-weight-bold text-danger product-input" name="productInput[${rowIndex}]" id="productInput[${rowIndex}]" value="${data.ProductName}" hidden>
                     </div>
                 </td>
                 <td>
                     ${data.SellingPrice}
                     <input type="text" class="form-control price-input" id="priceInput[${rowIndex}]" name="priceInput[${rowIndex}]" value="${data.SellingPrice}" hidden>
                 </td>
                 <td>
                     ${data.DiscPerceForCreateInvoice}
                     <input type="text" class="form-control maxDisc-input" id="maxDiscInput[${rowIndex}]" name="maxDiscInput[${rowIndex}]" value="${data.DiscPerceForCreateInvoice}" hidden>
                 </td>
                 <td class="col-3">
                     <div>
                         <div class="input-group input-spinner">
                             <button class="btn btn-white" type="button" id="button-plus-${rowIndex}" onclick="Add(event, ${rowIndex})"> + </button>
                             <input type="number" max="${data.StockQuantity}" class="form-control quantity-input" name="quantityInput[${rowIndex}]" id="quantityInput[${rowIndex}]" value="1">
                             <button class="btn btn-white" type="button" id="button-minus-${rowIndex}" onclick="Decrement(event, ${rowIndex})"> − </button>
                         </div>
                     </div>
                 </td>
                 <td class="text-danger">
                 ${data.StockQuantity}
                 <input type="text" class="form-control stock-input" id="stockInput[${rowIndex}]" name="stockInput[${rowIndex}]" value="${data.StockQuantity}" hidden>
                 </td>
                 <td class="individualDiscount col-1">
                 <input class="form-control individualDiscount-input" type="number" max="${data.DiscPerceForCreateInvoice}" name="individualDiscount[${rowIndex}]"
                 oninput="IndividualDiscount(this.value)"/> <td/>
                 <td><button class="btn btn-inverse-danger" id="deleteBtn-${rowIndex}" type="button" onclick="Delete(event, ${rowIndex})">Delete</button></td>
             </tr>
         `;
             $('#listOfPurchases tbody').append(newRowHtml);
             reorderRows();
         };
         function IndividualDiscount(value){
             updateTotalPrice();
         };
         function reorderRows() {
             $('#listOfPurchases tbody tr').each(function(index) {
             // Update the id and text of each td based on the index of the row
             var row = $(this);

             // Update the index column
             row.find('td').first().text(index + 1);  // Reset the first column to show the updated index

             // Update ids for the quantity and price inputs and buttons
             row.find('.product-input').attr('id', `productInput[${index}]`);
             row.find('.product-input').attr('name', `productInput[${index}]`);
             row.find('.price-input').attr('id', `priceInput[${index}]`);
             row.find('.price-input').attr('name', `priceInput[${index}]`);
             row.find('.quantity-input').attr('id', `quantityInput[${index}]`);
             row.find('.quantity-input').attr('name', `quantityInput[${index}]`);
             row.find('.stock-input').attr('id', `stockInput[${index}]`);
             row.find('.stock-input').attr('name', `stockInput[${index}]`);
             row.find('.individualDiscount-input').attr('id', `individualDiscount[${index}]`);
             row.find('.individualDiscount-input').attr('name', `individualDiscount[${index}]`);
             row.find('button[id^="button-plus"]').attr('id', `button-plus-${index}`);
             row.find('button[id^="button-minus"]').attr('id', `button-minus-${index}`);
             row.find('button[id^="deleteBtn"]').attr('id', `deleteBtn-${index}`);
                 });
            }
         function Add(event) {
                     

                       var addBtn = $(event.target);  // Get the clicked button
                       var inputField = addBtn.siblings('.quantity-input');  // Get the input field that is a sibling of the clicked button
                       var stockQuan = inputField.attr('max');  // Get the input field that is a sibling of the clicked button

                       // Get the current value of the input field and parse it as an integer
                       var currentValue = parseInt(inputField.val());
                       if(currentValue < parseInt(stockQuan)){

                       // Increment the value by 1
                       inputField.val(currentValue + 1);
                       updateTotalPrice();
                       }
             };

          function Decrement(event) {
                     
                    var addBtn = $(event.target);  // Get the clicked button
                    var inputField = addBtn.siblings('.quantity-input');  // Get the input field that is a sibling of the clicked button

                    // Get the current value of the input field and parse it as an integer
                    var currentValue = parseInt(inputField.val());
                    if(currentValue > 1){

                    // Decrement the value by 1
                    inputField.val(currentValue - 1);
                    updateTotalPrice();
                    }
          };
         function SearchProduct() {
            var query = $('#inputSearch').val();
            var $url = "@Url.Action("SearchProduct", "Invoice")";
            var parameter = { data: query };

            _Ajax.GETWithParametersStringfy($url, parameter, "GET",
                function () { }, // beforeSend

                function (data) { // success
                    var res = JSON.parse(data);
                    if (res != null && res.IsSuccess == true) {
                        checkNoData();

                        if (res.Data.length === 1) {
                            AddNewRow(res.Data[0]);
                            updateTotalPrice();
                        } else if (res.Data.length > 1) {
                            let optionsHtml = "<ul style='list-style:none;padding:0;'>";
                            res.Data.forEach((item, index) => {
                                debugger;
                                optionsHtml += `
                                    <li style="margin:8px 0; cursor:pointer; border:1px solid #ccc; border-radius:6px; padding:10px;"
                                        onclick="selectItem(${index})">
                                        <strong>${item.DisplayProductName ?? 'Unnamed Item'}</strong> <strong>${item.Description ?? 'Unnamed Item'}</strong><br>
                                        Price: ${item.SellingPrice ?? 0}
                                    </li>`;
                            });
                            optionsHtml += "</ul>";

                            Swal.fire({
                                title: "Choose an item",
                                html: optionsHtml,
                                showConfirmButton: false,
                                width: "400px"
                            });

                            window._popupData = res.Data;
                        }
                    } else {
                        _SWAL.AlertWithoutNotification(res.Message);
                    }
                },

                function (xhr) { // ❗ error callback must be here inside
                    _SWAL.AlertWithoutNotification("Something went wrong..!!");
                }
            );
        }
         function selectItem(index) {
            const selected = window._popupData[index];
            Swal.close(); // close popup
            AddNewRow(selected);
            updateTotalPrice();
        }
         //window.Delete =
          function Delete(event) {
              
                  var deleteBtn = $(event.target);
                  var rowToDelete = deleteBtn.closest('tr');
                  rowToDelete.remove();
                  reorderRows();
                  updateTotalPrice();
          };


         function checkNoData() {
         var rows = $('#listOfPurchases tbody tr');

         // If there are no rows (excluding the "No data found yet" row)
         if (rows.length === 1 && rows.hasClass('no-data-row')) {
             // Show the 'No data found yet' message
             $('#listOfPurchases tbody .no-data-row').show();
         } else {
             // If rows are added, remove the "No data found yet" row
             //
              $('#listOfPurchases tbody .no-data-row').closest('tr').remove();
             //$('#listOfPurchases tbody .no-data-row').remove();
         }
         }
         function updateShippingPriceHtml($select){
              let selectedText = $("#AreaId option:selected").text();
                    // e.g. "2 - al hadaba al wosta (mokattam) (15)"

                    // Use regex to get the number inside the last ()
                    let match = selectedText.match(_RegexFloat);
                    let val = "";
                    if (match) {
                        val = match[1]; // "15"
                        console.log(val);
                    }
                var selectedOption = $select.find('option:selected');
                var selectedTextt = selectedOption[0].text;
                var selectedValue = parseFloat(selectedOption.val());
                $('#shipping').text('$' + val);
                $('#shipping').attr('data-value', val);
                $('#shipping').attr('data-text', selectedText);
                $('#shippingInput').val(selectedValue);
                $('#shippingText').val(selectedText);
         }
    </script>
}