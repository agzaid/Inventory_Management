@model Domain.Models.InvoiceVM

<div class="page-wrapper">
    <div class="page-content">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body p-4">
                        <form asp-action="Create" asp-controller="Invoice" id="myForm" enctype="multipart/form-data">
                            <h5 class="card-title">Create Invoice</h5>
                            <hr />
                            <div class="card-body">
                                <div class="fm-search">
                                    <div class="mb-0">
                                        <div class="input-group input-group-lg">
                                            <span class="input-group-text bg-transparent"><i class='bx bx-search'></i></span>
                                            <input id="inputSearch" type="text" class="form-control" placeholder="Search the files">
                                        </div>
                                    </div>
                                </div>
                                <div class="table-responsive text-center mt-3">
                                    <table class="table table-striped table-hover table-sm mb-0" id="listOfPurchases">
                                        <thead>
                                            <tr>
                                                <th>ID</th>
                                                <th colspan="2">Product Name</th>
                                                <th>Price</th>
                                                <th>Quantity</th>
                                                <th>Available In Stock</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="7" class="no-data-row text-center">
                                                    No products yet...!!!
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <div class="row mt-3">
                                    <div class="container col-8">
                                        <div class="mb-3">
                                            <label class="form-label">Customer Name</label>
                                            <input class="form-control" asp-for="CustomerName">
                                            <span asp-validation-for="CustomerName" class="text-danger"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Phone Number</label>
                                            <input class="form-control" asp-for="PhoneNumber">
                                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                                        </div>
                                        <div class="mb-3">
                                            <label for="inputProductType" class="form-label">Delivery Regoin</label>
                                            <select class="form-select mb-2" aria-label="multiple select example"
                                                    asp-for="AreaId" asp-items="@(new SelectList(Model.ListOfAreas, "Value", "Text"))" data-placeholder=" Choose Area...">
                                                <option disabled>Please Select Area...</option>
                                            </select>
                                        </div>
                                        <div class="mb-3">
                                            <label class="form-label">Shipping Notes</label>
                                            <textarea class="form-control" asp-for="ShippingNotes" placeholder="Detailed Address...">
                                             </textarea>
                                            <span asp-validation-for="ShippingNotes" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="align-items-center">
                                            <table class="table table-striped table-hover table-sm mb-0" id="">
                                                <thead>
                                                    <tr>
                                                        <th></th>
                                                        <th></th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <tr>
                                                        <td class="text-center">
                                                            Total Amount :
                                                        </td>
                                                        <td class="text-center d-flex">
                                                            <div id="totalAmount">--</div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">
                                                            Order Tax :
                                                        </td>
                                                        <td class="text-center d-flex">
                                                            <div id="orderTax">--</div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">
                                                            Shipping :
                                                        </td>
                                                        <td class="text-center d-flex">
                                                            <div id="shipping">--</div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">
                                                            Discount :
                                                        </td>
                                                        <td class="text-center d-flex">
                                                            <div id="discount">--</div>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <td class="text-center">
                                                            Grand Total :
                                                        </td>
                                                        <td class="text-center d-flex">
                                                            <div id="grandTotal">--</div>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <button type="submit" id="submitBtn" class="btn btn-inverse-primary">Submit</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(document).ready(function () {

            let userTyping = false;

          $('#myForm').on('submit', function (event) {
              debugger;
              if (!userTyping) {
                 event.preventDefault();  // Prevent the form from submitting
              }else
                userTyping=false;
            });

          $('#inputSearch').on('input', function() {
            userTyping = true;
              });

            $('#ImagesFormFiles').imageuploadify();

            $('#inputSearch').on('keydown', function(event) {
                debugger;
                    if (event.key === 'Enter') {
                            event.preventDefault();  // Prevent the form from submitting
                            SearchProduct();
                        }
                 event.preventDefault();  // Prevents the form from being submitted
            });
            $('#AreaId').on('change',function() {
                 debugger;
                 // Get the selected option
                 var selectedOption = $(this).find('option:selected');

                 // Get the value of the selected option
                 var selectedValue = parseFloat(selectedOption.val());
                 $('#shipping').text('$' + selectedValue.toFixed(2));
                 $('#shipping').attr('data-value', selectedValue);
                 updateTotalPrice();
             });
        });

        function updateTotalPrice() {
            var totalPrice = 0;

            // Loop through each row to sum the product total prices
            $('.price-input').each(function() {
                debugger;
                var price = parseInt($(this).val());
                var row = $(this).closest('tr');
                var quantity = row.find('.quantity-input').val();
                var shipping =parseFloat( $('#shipping').attr('data-value'));
                var productTotal = quantity * price + shipping;

                // Update the product's total price in the row
                $('#totalAmount').text('$' + productTotal.toFixed(2));
                // Add to the grand total
                totalPrice += productTotal;
            });

            // Update the total price in the UI
            $('#grandTotal').text('$' + totalPrice.toFixed(2));
        }

        function AddNewRow(data){
            debugger;
             var rowIndex = $('#listOfPurchases tbody tr').length;
            var newRowHtml = `
                <tr id="row-${rowIndex}">
                <td id="index-${rowIndex}">${rowIndex + 1}</td>
                <td colspan="2">
                    <div class="d-flex align-items-center">
                        <div>
                            <i class='bx bxs-file-pdf me-2 font-24 text-danger'></i>
                        </div>
                        <div class="font-weight-bold text-danger">${data.ProductName}</div>
                        <input class="font-weight-bold text-danger product-input" name="productInput[${rowIndex}]" id="productInput[${rowIndex}]" value="${data.ProductName}" hidden>
                    </div>
                </td>
                <td>
                    ${data.SellingPrice}
                    <input type="text" class="form-control price-input" id="priceInput[${rowIndex}]" name="priceInput[${rowIndex}]" value="${data.SellingPrice}" hidden>
                </td>
                <td class="col-3">
                    <div>
                        <div class="input-group input-spinner">
                            <button class="btn btn-white" type="button" id="button-plus-${rowIndex}" onclick="Add(event, ${rowIndex})"> + </button>
                            <input type="text" class="form-control quantity-input" name="quantityInput[${rowIndex}]" id="quantityInput[${rowIndex}]" value="1">
                            <button class="btn btn-white" type="button" id="button-minus-${rowIndex}" onclick="Decrement(event, ${rowIndex})"> − </button>
                        </div>
                    </div>
                </td>
                <td class="text-danger">
                ${data.StockQuantity}
                <input type="text" class="form-control stock-input" id="stockInput[${rowIndex}]" name="stockInput[${rowIndex}]" value="${data.StockQuantity}" hidden>
                </td>
                <td><button class="btn btn-inverse-danger" id="deleteBtn-${rowIndex}" type="button" onclick="Delete(event, ${rowIndex})">Delete</button></td>
            </tr>
        `;
            $('#listOfPurchases tbody').append(newRowHtml);
            reorderRows();
        };
        function reorderRows() {
            $('#listOfPurchases tbody tr').each(function(index) {
             debugger;
            // Update the id and text of each td based on the index of the row
            var row = $(this);

            // Update the index column
            row.find('td').first().text(index + 1);  // Reset the first column to show the updated index

            // Update ids for the quantity and price inputs and buttons
            row.find('.product-input').attr('id', `productInput[${index}]`);
            row.find('.product-input').attr('name', `productInput[${index}]`);
            row.find('.price-input').attr('id', `priceInput[${index}]`);
            row.find('.price-input').attr('name', `priceInput[${index}]`);
            row.find('.quantity-input').attr('id', `quantityInput[${index}]`);
            row.find('.quantity-input').attr('name', `quantityInput[${index}]`);
            row.find('.stock-input').attr('id', `stockInput[${index}]`);
            row.find('.stock-input').attr('name', `stockInput[${index}]`);
            row.find('button[id^="button-plus"]').attr('id', `button-plus-${index}`);
            row.find('button[id^="button-minus"]').attr('id', `button-minus-${index}`);
            row.find('button[id^="deleteBtn"]').attr('id', `deleteBtn-${index}`);
                });
           }
        function Add(event) {
                    debugger;
                      var addBtn = $(event.target);  // Get the clicked button
                      var inputField = addBtn.siblings('.quantity-input');  // Get the input field that is a sibling of the clicked button

                      // Get the current value of the input field and parse it as an integer
                      var currentValue = parseInt(inputField.val());

                      // Increment the value by 1
                      inputField.val(currentValue + 1);
            };

         function Decrement(event) {
                    debugger;
                   var addBtn = $(event.target);  // Get the clicked button
                   var inputField = addBtn.siblings('.quantity-input');  // Get the input field that is a sibling of the clicked button

                   // Get the current value of the input field and parse it as an integer
                   var currentValue = parseInt(inputField.val());

                   // Decrement the value by 1
                   inputField.val(currentValue - 1);
         };
         function SearchProduct() {
                var query = $('#inputSearch').val();
                // var $url = "@Url.Action("FilterPatientByDate", "Doctor")";
                var $url = "@Url.Action("SearchProduct", "Invoice")";
                var parameter = {
                    data: query
                };
                _Ajax.GETWithParametersStringfy($url, parameter, "GET", function () { },
                    function (data) {
                        var res = JSON.parse(data);
                        if (res != null && res.IsSuccess==true) {
                            checkNoData();
                            AddNewRow(res.Data[0]);
                            updateTotalPrice();
                        } else
                            _SWAL.AlertWithoutNotification(res.Message);
                    },
                    function (xhr) {
                        _SWAL.AlertWithoutNotification("Something went wrong..!!");
                    });
            };
        //window.Delete =
         function Delete(event) {
             debugger;
                 var deleteBtn = $(event.target);
                 var rowToDelete = deleteBtn.closest('tr');
                 rowToDelete.remove();
                 reorderRows();
                 updateTotalPrice();
         };


        function checkNoData() {
        var rows = $('#listOfPurchases tbody tr');

        // If there are no rows (excluding the "No data found yet" row)
        if (rows.length === 1 && rows.hasClass('no-data-row')) {
            // Show the 'No data found yet' message
            $('#listOfPurchases tbody .no-data-row').show();
        } else {
            // If rows are added, remove the "No data found yet" row
            //debugger;
             $('#listOfPurchases tbody .no-data-row').closest('tr').remove();
            //$('#listOfPurchases tbody .no-data-row').remove();
        }
        }
    </script>
}